# Generated by Django 4.1 on 2023-11-03 06:42

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AuthGroup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150, unique=True)),
            ],
            options={
                'db_table': 'auth_group',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthGroupPermissions',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'auth_group_permissions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthPermission',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('codename', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'auth_permission',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128)),
                ('last_login', models.DateTimeField(blank=True, null=True)),
                ('is_superuser', models.IntegerField()),
                ('username', models.CharField(max_length=150, unique=True)),
                ('first_name', models.CharField(max_length=150)),
                ('last_name', models.CharField(max_length=150)),
                ('email', models.CharField(max_length=254)),
                ('is_staff', models.IntegerField()),
                ('is_active', models.IntegerField()),
                ('date_joined', models.DateTimeField()),
            ],
            options={
                'db_table': 'auth_user',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUserGroups',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'auth_user_groups',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUserUserPermissions',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'auth_user_user_permissions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Customers',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('customer_id', models.CharField(blank=True, max_length=255, null=True)),
                ('customer_unique_id', models.CharField(blank=True, max_length=255, null=True)),
                ('customer_zip_code_prefix', models.IntegerField(blank=True, null=True)),
                ('customer_city', models.CharField(blank=True, max_length=255, null=True)),
                ('customer_state', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'customers',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoAdminLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action_time', models.DateTimeField()),
                ('object_id', models.TextField(blank=True, null=True)),
                ('object_repr', models.CharField(max_length=200)),
                ('action_flag', models.PositiveSmallIntegerField()),
                ('change_message', models.TextField()),
            ],
            options={
                'db_table': 'django_admin_log',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoContentType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('app_label', models.CharField(max_length=100)),
                ('model', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'django_content_type',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoMigrations',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('app', models.CharField(max_length=255)),
                ('name', models.CharField(max_length=255)),
                ('applied', models.DateTimeField()),
            ],
            options={
                'db_table': 'django_migrations',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoSession',
            fields=[
                ('session_key', models.CharField(max_length=40, primary_key=True, serialize=False)),
                ('session_data', models.TextField()),
                ('expire_date', models.DateTimeField()),
            ],
            options={
                'db_table': 'django_session',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Geolocation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('geolocation_zip_code_prefix', models.IntegerField(blank=True, null=True)),
                ('geolocation_lat', models.FloatField(blank=True, null=True)),
                ('geolocation_lng', models.FloatField(blank=True, null=True)),
                ('geolocation_city', models.CharField(blank=True, max_length=255, null=True)),
                ('geolocation_state', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'geolocation',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='OrderItems',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order_id', models.CharField(blank=True, max_length=255, null=True)),
                ('order_item_id', models.IntegerField(blank=True, null=True)),
                ('product_id', models.CharField(blank=True, max_length=255, null=True)),
                ('seller_id', models.CharField(blank=True, max_length=255, null=True)),
                ('shipping_limit_date', models.DateTimeField(blank=True, null=True)),
                ('price', models.FloatField(blank=True, null=True)),
                ('freight_value', models.FloatField(blank=True, null=True)),
            ],
            options={
                'db_table': 'order_items',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='OrderPayments',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order_id', models.CharField(blank=True, max_length=255, null=True)),
                ('payment_sequential', models.IntegerField(blank=True, null=True)),
                ('payment_type', models.CharField(blank=True, max_length=255, null=True)),
                ('payment_installments', models.IntegerField(blank=True, null=True)),
                ('payment_value', models.FloatField(blank=True, null=True)),
            ],
            options={
                'db_table': 'order_payments',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='OrderReviews',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('review_id', models.CharField(blank=True, max_length=255, null=True)),
                ('order_id', models.CharField(blank=True, max_length=255, null=True)),
                ('review_score', models.IntegerField(blank=True, null=True)),
                ('review_comment_title', models.TextField(blank=True, null=True)),
                ('review_comment_message', models.TextField(blank=True, null=True)),
                ('review_creation_date', models.DateTimeField(blank=True, null=True)),
                ('review_answer_timestamp', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'order_reviews',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Orders',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order_id', models.CharField(blank=True, max_length=255, null=True)),
                ('customer_id', models.CharField(blank=True, max_length=255, null=True)),
                ('order_status', models.CharField(blank=True, max_length=255, null=True)),
                ('order_purchase_timestamp', models.DateTimeField(blank=True, null=True)),
                ('order_approved_at', models.DateTimeField(blank=True, null=True)),
                ('order_delivered_carrier_date', models.DateTimeField(blank=True, null=True)),
                ('order_delivered_customer_date', models.DateTimeField(blank=True, null=True)),
                ('order_estimated_delivery_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'orders',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('product_id', models.CharField(blank=True, max_length=255, null=True)),
                ('product_category_name', models.CharField(blank=True, max_length=255, null=True)),
                ('product_name_length', models.IntegerField(blank=True, null=True)),
                ('product_description_length', models.IntegerField(blank=True, null=True)),
                ('product_photos_qty', models.IntegerField(blank=True, null=True)),
                ('product_weight_g', models.FloatField(blank=True, null=True)),
                ('product_length_cm', models.FloatField(blank=True, null=True)),
                ('product_height_cm', models.FloatField(blank=True, null=True)),
                ('product_width_cm', models.FloatField(blank=True, null=True)),
            ],
            options={
                'db_table': 'product',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Sellers',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('seller_id', models.CharField(blank=True, max_length=255, null=True)),
                ('seller_zip_code_prefix', models.IntegerField(blank=True, null=True)),
                ('seller_city', models.CharField(blank=True, max_length=255, null=True)),
                ('seller_state', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'sellers',
                'managed': False,
            },
        ),
    ]
